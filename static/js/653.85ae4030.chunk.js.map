{"version":3,"file":"static/js/653.85ae4030.chunk.js","mappings":"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","sources":["components/Items/ItemPeso.js","components/Table/TablePeso.js","pages/Peso/Peso.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport '../Table/table.css';\r\n\r\nexport const ItemPeso = (props) => {\r\n\r\n    const iconDelete = <FontAwesomeIcon icon={faTrash} />\r\n    \r\n    const { date, time, weight, id } = props.pes\r\n    const { handleDelete } = props\r\n\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Fecha</th>\r\n                    <th scope=\"col\">Hora</th>\r\n                    <th scope=\"col\">Peso</th>\r\n                    <th scope=\"col\">Borrar</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td data-label=\"Fecha\">{ date }</td>\r\n                    <td data-label=\"Hora\">{ time }</td>\r\n                    <td data-label=\"Peso\">{ weight }</td>\r\n                    <td data-label=\"Borrar\"><button onClick={ () => handleDelete(id) }>{ iconDelete }</button></td>\r\n                </tr>\r\n            </tbody>\r\n        </>\r\n       )\r\n}","import { ItemPeso } from '../Items/ItemPeso';\r\nimport './table.css';\r\n\r\n\r\nexport const TablePeso = (props) => {\r\n\r\n  const { peso, handleDelete } = props\r\n  \r\n  return (\r\n    <div className=\"wrap-table\">\r\n      <table>\r\n        <caption>Historial</caption>\r\n          {\r\n            peso ? peso.map((pes, index) => {\r\n              return (\r\n                <ItemPeso\r\n                  key={index} \r\n                  pes={pes}\r\n                  handleDelete={handleDelete} \r\n                />\r\n              )\r\n            })\r\n          :\r\n            <tbody></tbody>\r\n          }  \r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useCallback, useState } from 'react';\r\nimport { collection, getDocs, setDoc, query, orderBy, deleteDoc, doc, Timestamp } from 'firebase/firestore';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBaby } from '@fortawesome/free-solid-svg-icons';\r\nimport { TablePeso } from '../../components/Table/TablePeso';\r\nimport { generateUUID } from '../../utils/utils';\r\nimport '../../App.css';\r\n\r\nconst Peso = (props) => {\r\n\r\n  const { db } = props;\r\n\r\n  const [pesos, setPesos] = useState(null);\r\n  const [sizeIcon, setSizeIcon] = useState('1x');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [weight, setWeight] = useState(1);\r\n\r\n  const iconBaby = <FontAwesomeIcon icon={faBaby} size={sizeIcon} />\r\n\r\n  const calculateSizeIcon = useCallback(() => {\r\n    if (!weight) return;\r\n\r\n    if (weight > 9 && weight <= 12) {\r\n      return '5x';\r\n    } if(weight > 6 && weight <= 9) {\r\n      return '4x';\r\n    } if(weight > 3 && weight <= 6) {\r\n      return '3x';\r\n    } else {\r\n      return'2x';\r\n    }\r\n  }, [weight]);\r\n\r\n  useEffect(() => {\r\n    if(db) getPesos(db).then(data => setPesos(data));\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    setSizeIcon(calculateSizeIcon());\r\n  }, [weight, calculateSizeIcon]);\r\n\r\n\r\n      /**\r\n   *  Eliminate peso\r\n   * @param {*} id \r\n   */\r\n       const handleDelete = async (id) => {\r\n        await deleteDoc(doc(db, \"peso-v1\", id));\r\n        getPesos(db).then(data => setPesos(data));\r\n      }\r\n    \r\n      /**\r\n       * Set peso doc\r\n       * @param {*} param0 \r\n       */\r\n      const savePeso = async (weight) => {\r\n          const id = generateUUID();\r\n          await setDoc(doc(db, \"peso-v1/\", id), {\r\n            id, \r\n            date: new Date().toLocaleDateString(\"es-ES\"),\r\n            weight,\r\n            time: new Date().toLocaleTimeString(),\r\n            timeStamp: Timestamp.now()\r\n          }); \r\n        getPesos(db).then(data => setPesos(data));\r\n      }\r\n    \r\n      /**\r\n       * Get All Documents order by timeStamp\r\n       * @param {*} db \r\n       * @returns \r\n       */\r\n      const getPesos = async (db) => {\r\n        const pesoCol = collection(db, 'peso-v1/');\r\n        const q = query(pesoCol, orderBy(\"timeStamp\", \"desc\"));\r\n        const pesoDnapshot = await getDocs(q);\r\n        const pesoList = pesoDnapshot.docs.map(doc => doc.data());\r\n        return pesoList;\r\n      }\r\n\r\n      const handleChange = (event) => { setWeight(event.target.value) }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setIsSubmitting(false);\r\n        savePeso(weight);\r\n        setIsSubmitting(false);\r\n        setWeight(1);\r\n      }\r\n\r\n\r\n    return (\r\n      <>\r\n        <form>   \r\n          <div className=\"col-s-12 col-xs-12\" style={{ width: '100%' }} role=\"group\" aria-labelledby=\"radio-tit\">\r\n            <div id=\"radio-tit\">Peso</div>\r\n            <label id=\"weight-peso\" htmlFor=\"peso\" className='col-xs-12 col-s-12'>\r\n              { weight === 1 ? `${ weight } Kg` : `${ weight } Kgs` }\r\n              <input type=\"range\" name=\"peso\" min=\"1\" max=\"12\" step=\"0.10\" onChange={handleChange} value={weight.toString()} id=\"weight-input\" className=\"col-xs-12 col-s-12\"  /> \r\n            </label>\r\n\r\n            {  \r\n              <div className='space'>\r\n                { iconBaby }\r\n              </div>\r\n            }  \r\n              \r\n          </div>\r\n            \r\n          <button type=\"submit\" className=\"button-register\" onClick={handleSubmit} disabled={isSubmitting}>\r\n            Registrar Peso\r\n          </button>\r\n        </form>\r\n\r\n        <TablePeso peso={pesos} handleDelete={handleDelete} />\r\n     </>\r\n    );\r\n  }\r\n\r\n  export default Peso;"],"names":["ItemPeso","props","iconDelete","icon","faTrash","pes","date","time","weight","id","handleDelete","scope","onClick","TablePeso","peso","className","map","index","db","useState","pesos","setPesos","sizeIcon","setSizeIcon","isSubmitting","setIsSubmitting","setWeight","iconBaby","faBaby","size","calculateSizeIcon","useCallback","useEffect","getPesos","then","data","deleteDoc","doc","savePeso","generateUUID","setDoc","Date","toLocaleDateString","toLocaleTimeString","timeStamp","Timestamp","pesoCol","collection","q","query","orderBy","getDocs","pesoDnapshot","pesoList","docs","style","width","role","htmlFor","type","name","min","max","step","onChange","event","target","value","toString","preventDefault","disabled"],"sourceRoot":""}