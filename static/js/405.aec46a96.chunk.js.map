{"version":3,"file":"static/js/405.aec46a96.chunk.js","mappings":"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","sources":["components/Items/ItemCaca.js","components/Table/TableCaca.js","pages/Cacas/Cacas.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport '../Table/table.css';\r\n\r\nexport const ItemCaca = (props) => {\r\n\r\n    const iconDelete = <FontAwesomeIcon icon={faTrash} />\r\n    \r\n    const { date, time, type, id } = props.caca\r\n    const { handleDelete, total, average } = props\r\n\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Fecha</th>\r\n                    <th scope=\"col\">Hora</th>\r\n                    <th scope=\"col\">Tipo</th>\r\n                    <th scope=\"col\">Total Diario</th>\r\n                    <th scope=\"col\">Promedio</th>\r\n                    <th scope=\"col\">Borrar</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td data-label=\"Fecha\">{ date }</td>\r\n                    <td data-label=\"Hora\">{ time }</td>\r\n                    <td data-label=\"Tipo\">{ type }</td>\r\n                    <td data-label=\"Total Diario\">{ total }</td>\r\n                    <td data-label=\"Promedio\">{ average }</td>\r\n                    <td data-label=\"Borrar\"><button onClick={ () => handleDelete(id) }>{ iconDelete }</button></td>\r\n                </tr>\r\n            </tbody>\r\n        </>\r\n       )\r\n}","import { ItemCaca } from '../Items/ItemCaca';\r\nimport './table.css';\r\n\r\n\r\nexport const TableCaca = (props) => {\r\n\r\n  const { cacas, total, average, handleDelete } = props\r\n  \r\n  return (\r\n    <div className=\"wrap-table\">\r\n      <table>\r\n        <caption>Historial</caption>\r\n          {\r\n            cacas ? cacas.map((caca, index) => {\r\n              return (\r\n                <ItemCaca\r\n                  key={index} \r\n                  caca={caca}\r\n                  total={total}\r\n                  average={average}\r\n                  handleDelete={handleDelete} \r\n                />\r\n              )\r\n            })\r\n          :\r\n            <tbody></tbody>\r\n          }  \r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useCallback, useState } from 'react';\r\nimport { Formik, Field } from 'formik';\r\nimport { collection, getDocs, setDoc, query, orderBy, deleteDoc, doc, Timestamp, where } from 'firebase/firestore';\r\nimport { TableCaca } from '../../components/Table/TableCaca';\r\nimport '../../App.css';\r\n\r\n const Cacas = (props) => {\r\n\r\n  const { db } = props;\r\n\r\n  const [cacas, setCacas] = useState(null);\r\n  const [average, setAverage] = useState(null);\r\n  const [total, setTotal] = useState(0);\r\n\r\n\r\n  const averageCacas = useCallback(() => {\r\n    if(!cacas) return;\r\n    const total = cacas.reduce((acc, caca) => {\r\n        return acc + 1;\r\n    }, 0);\r\n    const average = total / cacas.length;\r\n    return average;\r\n  }, [cacas]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(db) getCacas(db).then(data => setCacas(data));\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    if(db) getTotalCacasByDay(db).then(data => setTotal(data));\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    setAverage(averageCacas());\r\n  }, [cacas, averageCacas]);\r\n\r\n      /**\r\n   *  Eliminate caca\r\n   * @param {*} id \r\n   */\r\n       const handleDelete = async (id) => {\r\n        await deleteDoc(doc(db, \"cacas-v1\", id));\r\n        getCacas(db).then(data => setCacas(data));\r\n      }\r\n    \r\n      /**\r\n       * Set doc\r\n       * @param {*} param0 \r\n       */\r\n      const saveCacas = async ({ type }) => {\r\n          const id = crypto.randomUUID();\r\n          await setDoc(doc(db, \"cacas-v1/\", id), {\r\n            id, \r\n            date: new Date().toLocaleDateString(\"es-ES\"),\r\n            type,\r\n            time: new Date().toLocaleTimeString(),\r\n            timeStamp: Timestamp.now()\r\n          }); \r\n        getCacas(db).then(data => setCacas(data));\r\n      }\r\n    \r\n      /**\r\n       * Get All Documents order by timeStamp\r\n       * @param {*} db \r\n       * @returns \r\n       */\r\n      const getCacas = async (db) => {\r\n        const cacasCol = collection(db, 'cacas-v1/');\r\n        const q = query(cacasCol, orderBy(\"timeStamp\", \"desc\"));\r\n        const cacaSnapshot = await getDocs(q);\r\n        const cacaList = cacaSnapshot.docs.map(doc => doc.data());\r\n        return cacaList;\r\n      }\r\n\r\n      /**\r\n       * get total cacas by day\r\n       * @param {*} db \r\n       * @return total cacas\r\n       */\r\n      const getTotalCacasByDay = async (db) => {\r\n        const cacasCol = collection(db, 'cacas-v1/');\r\n        const q = query(cacasCol, where(\"date\", \"==\", new Date().toLocaleDateString(\"es-ES\")));\r\n        const cacaSnapshot = await getDocs(q);\r\n        const cacaList = cacaSnapshot.docs.map(doc => doc.data());\r\n        return cacaList.length;\r\n      }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Formik\r\n          initialValues={{ type: ''}}\r\n          validate={values => {\r\n            const errors = {};\r\n            if (!values.type) {\r\n              errors.type = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            saveCacas(values);\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n          <form onSubmit={handleSubmit}>\r\n          \r\n            <div className=\"col-s-12 col-xs-12\" role=\"group\" aria-labelledby=\"radio-tit\">\r\n              <div id=\"radio-tit\">Caca</div>\r\n              <label htmlFor=\"type\" className='col-xs-12 col-s-6'>\r\n                LÃ­quida \r\n                <Field type=\"radio\" name=\"type\" value=\"liquid\"  className=\"col-xs-6 col-s-6\"  /> \r\n              </label>      \r\n              <label htmlFor=\"type\" className='col-xs-12 col-s-6'>\r\n                Normal \r\n                <Field type=\"radio\" name=\"type\" value=\"normal\" className=\"col-xs-6 col-s-6\" />\r\n              </label>\r\n              <label htmlFor=\"type\" className='col-xs-12 col-s-6'>\r\n                Pastosa \r\n                <Field type=\"radio\" name=\"type\" value=\"hard\" className=\"col-xs-6 col-s-6\"  /> \r\n              </label>\r\n              <label htmlFor=\"type\" className='col-xs-12 col-s-6'>\r\n                Dura \r\n                <Field type=\"radio\" name=\"type\" value=\"hard\" className=\"col-xs-6 col-s-6\"  /> \r\n              </label>\r\n            </div>\r\n\r\n              {errors.type && (\r\n                <span className=\"error\">{errors.type}</span>\r\n              )}\r\n            \r\n            <button type=\"submit\" className=\"button-register\" disabled={isSubmitting}>\r\n              Registrar caca\r\n            </button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n  \r\n      <TableCaca cacas={cacas} total={total} average={average} handleDelete={handleDelete} />\r\n    </>\r\n    );\r\n  }\r\n\r\n  export default Cacas;"],"names":["ItemCaca","props","iconDelete","icon","faTrash","caca","date","time","type","id","handleDelete","total","average","scope","onClick","TableCaca","cacas","className","map","index","db","useState","setCacas","setAverage","setTotal","averageCacas","useCallback","reduce","acc","length","useEffect","getCacas","then","data","getTotalCacasByDay","deleteDoc","doc","saveCacas","crypto","randomUUID","setDoc","Date","toLocaleDateString","toLocaleTimeString","timeStamp","Timestamp","cacasCol","collection","q","query","orderBy","getDocs","cacaSnapshot","cacaList","docs","where","initialValues","validate","values","errors","onSubmit","setSubmitting","handleSubmit","isSubmitting","role","htmlFor","name","value","disabled"],"sourceRoot":""}