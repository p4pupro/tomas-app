{"version":3,"file":"static/js/201.7cae5568.chunk.js","mappings":"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","sources":["components/Items/ItemPis.js","components/Table/TablePis.js","pages/Pis/Pis.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport '../Table/table.css';\r\n\r\nexport const ItemPis = (props) => {\r\n\r\n    const iconDelete = <FontAwesomeIcon icon={faTrash} />\r\n    \r\n    const { date, time, amount, id } = props.pi\r\n    const { handleDelete, total, average } = props\r\n\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Fecha</th>\r\n                    <th scope=\"col\">Hora</th>\r\n                    <th scope=\"col\">Cantidad</th>\r\n                    <th scope=\"col\">Total Diario</th>\r\n                    <th scope=\"col\">Promedio</th>\r\n                    <th scope=\"col\">Borrar</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td data-label=\"Fecha\">{ date }</td>\r\n                    <td data-label=\"Hora\">{ time }</td>\r\n                    <td data-label=\"Cantidad\">{ amount }</td>\r\n                    <td data-label=\"Total Diario\">{ total }</td>\r\n                    <td data-label=\"Promedio\">{ average }</td>\r\n                    <td data-label=\"Borrar\"><button onClick={ () => handleDelete(id) }>{ iconDelete }</button></td>\r\n                </tr>\r\n            </tbody>\r\n        </>\r\n       )\r\n}","import { ItemPis } from '../Items/ItemPis';\r\nimport './table.css';\r\n\r\n\r\nexport const TablePis = (props) => {\r\n\r\n  const { pis, total, average, handleDelete } = props\r\n  \r\n  return (\r\n    <div className=\"wrap-table\">\r\n      <table>\r\n        <caption>Historial</caption>\r\n          {\r\n            pis ? pis.map((pi, index) => {\r\n              return (\r\n                <ItemPis\r\n                  key={index} \r\n                  pi={pi}\r\n                  total={total}\r\n                  average={average}\r\n                  handleDelete={handleDelete} \r\n                />\r\n              )\r\n            })\r\n          :\r\n            <tbody></tbody>\r\n          }  \r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useCallback, useState } from 'react';\r\nimport { Formik, Field } from 'formik';\r\nimport { collection, getDocs, setDoc, query, orderBy, deleteDoc, doc, Timestamp, where } from 'firebase/firestore';\r\nimport { TablePis } from '../../components/Table/TablePis';\r\nimport '../../App.css';\r\n\r\nconst Pis = (props) => {\r\n\r\n  const { db } = props;\r\n\r\n  const [pis, setPis] = useState(null);\r\n  const [average, setAverage] = useState(null);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const averagePis = useCallback(() => {\r\n    if(!pis) return;\r\n    const total = pis.reduce((acc, pis) => {\r\n        return acc + 1;\r\n    }, 0);\r\n    const average = total / pis.length;\r\n    return average;\r\n  }, [pis]);\r\n\r\n  useEffect(() => {\r\n    if(db) getPis(db).then(data => setPis(data));\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    if(db) getTotalPisByDay(db).then(data => setTotal(data));\r\n  }, [db]);\r\n\r\n  useEffect(() => {\r\n    setAverage(averagePis());\r\n  }, [pis, averagePis]);\r\n\r\n\r\n      /**\r\n   *  Eliminate doc\r\n   * @param {*} id \r\n   */\r\n       const handleDelete = async (id) => {\r\n        await deleteDoc(doc(db, \"pis-v1/\", id));\r\n        getPis(db).then(data => setPis(data));\r\n      }\r\n    \r\n      /**\r\n       * Set doc\r\n       * @param {*} param0 \r\n       */\r\n      const savePis = async ({ amount }) => {\r\n          const id = crypto.randomUUID();\r\n          await setDoc(doc(db, \"pis-v1/\", id), {\r\n            id, \r\n            date: new Date().toLocaleDateString(\"es-ES\"),\r\n            amount,\r\n            time: new Date().toLocaleTimeString(),\r\n            timeStamp: Timestamp.now()\r\n          }); \r\n        getPis(db).then(data => setPis(data));\r\n      }\r\n    \r\n      /**\r\n       * Get All Documents order by timeStamp\r\n       * @param {*} db \r\n       * @returns \r\n       */\r\n      const getPis = async (db) => {\r\n        const pisCol = collection(db, 'pis-v1/');\r\n        const q = query(pisCol, orderBy(\"timeStamp\", \"desc\"));\r\n        const pisDnapshot = await getDocs(q);\r\n        const pisList = pisDnapshot.docs.map(doc => doc.data());\r\n        return pisList;\r\n      }\r\n\r\n      /**\r\n       * get pis by day\r\n       * @param {*} db \r\n       * @return total pis on day\r\n       */\r\n      const getTotalPisByDay = async (db) => {\r\n        const pisCol = collection(db, 'pis-v1/');\r\n        const q = query(pisCol, where(\"date\", \"==\", new Date().toLocaleDateString(\"es-ES\")));\r\n        const pisSnapshot = await getDocs(q);\r\n        const pisList = pisSnapshot.docs.map(doc => doc.data());\r\n        return pisList.length;\r\n      }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Formik\r\n          initialValues={{ amount: ''}}\r\n          validate={values => {\r\n            const errors = {};\r\n            if (!values.amount) {\r\n              errors.amount = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting, resetForm }) => {\r\n            savePis(values);\r\n            setSubmitting(false);\r\n            resetForm();\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n          <form onSubmit={handleSubmit}>\r\n          \r\n            <div className=\"col-s-12 col-xs-12\" role=\"group\" aria-labelledby=\"radio-tit\">\r\n              <div id=\"radio-tit\">Orina</div>\r\n              <label htmlFor=\"amount\" className='col-xs-12 col-s-6'>\r\n                Poco\r\n                <Field type=\"radio\" name=\"amount\" value=\"poco\" className=\"col-xs-6 col-s-6 pis\"  /> \r\n              </label>      \r\n              <label htmlFor=\"amount\" className='col-xs-12 col-s-6'>\r\n                Mucho\r\n                <Field type=\"radio\" name=\"amount\" value=\"mucho\" className=\"col-xs-6 col-s-6 pis\" />\r\n              </label>\r\n              \r\n            </div>\r\n\r\n              {errors.amount && (\r\n                <span className=\"error\">{errors.amount}</span>\r\n              )}\r\n            \r\n            <button type=\"submit\" className=\"button-register\" disabled={isSubmitting}>\r\n              Registrar Orina\r\n            </button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n  \r\n      <TablePis pis={pis} total={total} average={average} handleDelete={handleDelete} />\r\n    </>\r\n    );\r\n  }\r\n\r\n  export default Pis;"],"names":["ItemPis","props","iconDelete","icon","faTrash","pi","date","time","amount","id","handleDelete","total","average","scope","onClick","TablePis","pis","className","map","index","db","useState","setPis","setAverage","setTotal","averagePis","useCallback","reduce","acc","length","useEffect","getPis","then","data","getTotalPisByDay","deleteDoc","doc","savePis","crypto","randomUUID","setDoc","Date","toLocaleDateString","toLocaleTimeString","timeStamp","Timestamp","pisCol","collection","q","query","orderBy","getDocs","pisDnapshot","pisList","docs","where","pisSnapshot","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","handleSubmit","isSubmitting","role","htmlFor","type","name","value","disabled"],"sourceRoot":""}